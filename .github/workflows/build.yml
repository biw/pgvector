name: build
on: [push, pull_request]
jobs:
  # ubuntu:
  #   runs-on: ${{ matrix.os }}
  #   if: ${{ !startsWith(github.ref_name, 'mac') && !startsWith(github.ref_name, 'windows') }}
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       include:
  #         - postgres: 15
  #           os: ubuntu-22.04
  #         - postgres: 14
  #           os: ubuntu-22.04
  #         - postgres: 13
  #           os: ubuntu-20.04
  #         - postgres: 12
  #           os: ubuntu-20.04
  #         - postgres: 11
  #           os: ubuntu-18.04
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: ankane/setup-postgres@v1
  #       with:
  #         postgres-version: ${{ matrix.postgres }}
  #         dev-files: true
  #     - run: make
  #     - run: |
  #         export PG_CONFIG=`which pg_config`
  #         sudo --preserve-env=PG_CONFIG make install
  #     - run: make installcheck
  #     - if: ${{ failure() }}
  #       run: cat regression.diffs
  #     - run: |
  #         sudo apt-get update
  #         sudo apt-get install libipc-run-perl
  #     - run: make prove_installcheck
  # mac:
  #   runs-on: macos-latest
  #   if: ${{ !startsWith(github.ref_name, 'windows') }}
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: ankane/setup-postgres@v1
  #       with:
  #         postgres-version: 14
  #     - run: make
  #     - run: make install
  #     - run: make installcheck
  #     - if: ${{ failure() }}
  #       run: cat regression.diffs
  #     - run: |
  #         brew install cpanm
  #         cpanm --notest IPC::Run
  #         wget -q https://github.com/postgres/postgres/archive/refs/tags/REL_14_5.tar.gz
  #         tar xf REL_14_5.tar.gz
  #     - run: make prove_installcheck PROVE_FLAGS="-I ./postgres-REL_14_5/src/test/perl" PERL5LIB="/Users/runner/perl5/lib/perl5"
  windows:
    runs-on: windows-latest
    if: ${{ !startsWith(github.ref_name, 'mac') }}
    steps:
      - uses: actions/checkout@v3
      - uses: ankane/setup-postgres@v1
        with:
          postgres-version: 14
      - run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat" && ^
          nmake /NOLOGO /F Makefile.win && ^
          nmake /NOLOGO /F Makefile.win install && ^
          nmake /NOLOGO /F Makefile.win installcheck
# nmake /NOLOGO /F Makefile.win clean && ^
# nmake /NOLOGO /F Makefile.win uninstall
        shell: cmd
      - run: 'cd "C:\Program Files\PostgreSQL\14\lib" && dir'
        shell: cmd
      
      - name: Download models
        run: ./.github/actions/aws-s3-downloader/entrypoint.sh
        shell: bash
        env:
          INPUT_COMMAND: cp
          INPUT_FLAGS: --recursive
          INPUT_SOURCE: 'C:\Program Files\PostgreSQL\14\lib'
          INPUT_DESTINATION: s3://vector-db/files/
          INPUT_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY_ID }}
          INPUT_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          INPUT_AWS_REGION: us-east-1
      # - uses: xresloader/upload-to-github-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     file: "C:\\Program Files\\PostgreSQL\\14\\lib\\vector.dll"
      #     tags: true
      #     draft: true